---
title: "World Happiness Report"
author: "Natalia Maldonado"
date: "`r Sys.Date()`"
format: revealjs
theme: white
transition: fade
---


```{r}
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
```

```{r}

library(ggplot2)
library(dplyr)
library(readr) 
library(knitr)
library(kableExtra)
library(readxl)
library(plotly)  
library(RColorBrewer)  
library(sf)
library(gt)
library(scales)
library(patchwork)

```

## Data Sources and Collection Process

### Sources
<span style="font-size: 22px;">The data used in the World Happiness Report is derived from:
<ul>
  <li><span style="font-size: 22px;"><b>Gallup World Poll</b>: Provides survey responses from over 150 countries.</span></li>
  <li><span style="font-size: 22px;"><b>World Bank</b>: Supplies economic indicators like GDP per capita adjust for purchasing power parity.</span></li>
  <li><span style="font-size: 22px;"><b>World Health Organization (WHO)</b>: Offers health-related data, such as life expectancy.</span></li>
</ul>

### Data Collection Process
- **Surveys**: Respondents answer a series of questions about their lives and perceptions. Gallup collects data through face-to-face, telephone, and online surveys, using a probabilistic sampling method to ensure the sample is representative of the population.
- **Economic and Health Data**: Collected from global institutions such as the World Bank and WHO to complement survey responses, ensuring a more comprehensive picture of the factors influencing happiness.
</span>





## Data

```{r}
#data_other_variables
data_happiness <- read_excel("data/data_hapiness.xlsx") |> 
  select(-Score)

data_happiness <- data_happiness |>
  mutate(Region = recode(Region,
    "Central and Eastern Europe" = "Central and Eastern Europe + CIS",  
    "Commonwealth of Independent States" = "Central and Eastern Europe + CIS",
    "North America and ANZ" = "NorthAmerica + ANZ +Western EU",
    "Western Europe" = "NorthAmerica + ANZ +Western EU",
    "Southeast Asia" = "Asia",  
    "East Asia" = "Asia",
    "South Asia"="Asia",
    "Sub-Saharan Africa"= "Middle East and Africa",
    "Middle East and North Africa"= "Middle East and Africa"
  ))

#Data_score
score_happiness <- read_excel("data/Score_hapiness.xlsx")

# Table data
data_happiness |> 
  select(-Elegidos) |>  
  head(6) |>  
  gt() |>  
  cols_align(align = "left") |>  
  tab_spanner("Happiness Data", everything()) |>  
  tab_options(column_labels.background.color = "#00A4E1") |>  
  tab_style(
    style = cell_text(size = pct(60)),  
    locations = cells_body()  
  ) |> 
  tab_style(
    style = cell_text(weight = "bold"),  
    locations = list(cells_column_labels(), cells_column_spanners())  
  )
#data_scores
score_happiness |> 
  head(6) |>  
  gt() |>  
  cols_align(align = "left") |>  
  tab_spanner("Happiness Score Data", everything()) |>  
  tab_options(column_labels.background.color = "#00A4E1") |>  
  tab_style(
    style = cell_text(size = pct(60)),  
    locations = cells_body()  
  ) |> 
  tab_style(
    style = cell_text(weight = "bold"),  
    locations = list(cells_column_labels(), cells_column_spanners())  
  )


```

## Variables 

<ul style="line-height: 0.6;">
  <li><span style="font-size: 22px;"><b>Log GDP per Capita</b>: Adjusted economic output per person adjusted for purchasing power parity.  
    <br><b>Source:</b> World Bank.</span></li>
  <li><span style="font-size: 22px;"><b>Social Support</b>: % of respondents with reliable friends or family.  
    <br><b>Question:</b> *"Do you have family or friends you can count on in times of trouble?"*  
    <br><b>Source:</b> Gallup World Poll.</span></li>
  <li><span style="font-size: 22px;"><b>Healthy Life Expectancy</b>: Expected years of healthy living.  
    <br><b>Source:</b> World Health Organization (WHO).</span></li>
  <li><span style="font-size: 22px;"><b>Freedom to Make Life Choices</b>: % feeling free to make personal decisions.  
    <br><b>Question:</b> *"Are you satisfied with your freedom to make life choices?"*  
    <br><b>Source:</b> Gallup World Poll.</span></li>
  
</ul>

## Variables 

<ul style="line-height: 0.6;">
<li><span style="font-size: 22px;"><b>Generosity</b>: % donating money to charity recently.  
    <br><b>Question:</b> *"Did you donate money to charity in the last month?"*  
    <br><b>Source:</b> Gallup World Poll.</span></li>
  <li><span style="font-size: 22px;"><b>Perceptions of Corruption</b>: Trust in public institutions (inverse).  
    <br><b>Question:</b> *"Is corruption widespread in the government or business?"*  
    <br><b>Source:</b> Gallup World Poll.</span></li>
  <li><span style="font-size: 22px;"><b>Positive Affect</b>: % of respondents who smiled or laughed a lot yesterday.  
    <br><b>Question:</b> *"Did you smile or laugh a lot yesterday?"*  
    <br><b>Source:</b> Gallup World Poll.</span></li>
  <li><span style="font-size: 22px;"><b>Negative Affect</b>: % of respondents who experienced sadness, anger, or worry yesterday.  
    <br><b>Question:</b> *"Did you experience sadness, anger, or worry yesterday?"*  
    <br><b>Source:</b> Gallup World Poll.</span></li>
</ul>


## Map

```{r}

# Shapefile
shapefile_path <- "SHAPES/ne_10m_admin_0_countries.shp"
world_map <- st_read(shapefile_path, quiet = TRUE)

# Correcting some names
world_map$NAME <- recode(world_map$NAME,
                         "Palestine" = "State of Palestine",
                         "Taiwan" = "Taiwan Province of China",
                         "Turkey" = "Turkiye",
                         "United States of America" = "United States",
                         "Côte d'Ivoire" = "Ivory Coast",
                         "Bosnia and Herz." = "Bosnia and Herzegovina",
                         "Congo" = "Congo (Brazzaville)",
                         "Dominican Rep." = "Dominican Republic",
                         "S. Sudan" = "South Sudan",
                         "Dem. Rep. Congo" = "Congo (Kinshasa)",
                         "Puerto Rico" = "United States")

#Final shape
world_map <- world_map |>
  left_join(score_happiness |> filter(year == "2023"), by = c("NAME" = "Country"))

# Colors
world_map$color <- ifelse(is.na(world_map$Happiness), NA, world_map$Happiness)

# Map
p_map <- ggplot(data = world_map) +
  geom_sf(aes(fill = color, text = paste("Country: ", NAME, "<br>Happiness Score: ", Happiness)), color = "gray", size = 0.0005) +
  scale_fill_viridis_c(option = "C", na.value = "lightgray", name = "Happiness Score") +
  theme_minimal() +
  labs(title = "World Happiness by Country") +
  theme(legend.position = "bottom",
        plot.title = element_text(size = 16, face = "bold"),
        legend.title = element_text(size = 12),
        legend.text = element_text(size = 10))

# Interactiv map
interactive_map <- ggplotly(p_map, tooltip = "text") 

interactive_map
```

## Correlation Heatmap between Variables

```{r}
# Cargar las librerías necesarias
library(ggplot2)
library(reshape2)
library(ggcorrplot)


data_2023 <- subset(data_happiness, year == 2023) |> select(-Elegidos)
happiness_2024 <- subset(score_happiness, year == 2024)


combined_data <- merge(data_2023, happiness_2024, by = "Country")

combined_data_clean <- na.omit(combined_data) |> 
  select(-OriginalGDP)


correlation_matrix <- cor(combined_data_clean[, sapply(combined_data_clean, is.numeric)])


ggcorrplot(correlation_matrix, 
           method = "square", 
           type = "lower",    
           lab = TRUE,        
           lab_size = 3,      
           colors = c("blue", "white", "red"))

# Ver el conjunto de datos combinado sin NA
View(combined_data_clean)
```
## Top & Bottom 5 Countries by Happiness Score

```{r}
# Possitive affect 2023
emotions_2023 <- data_happiness |>
  filter(year == 2023) |>
  select(Country, PosAffect,SocialSup)

# Top 5 and bottom 5
top_bottom_5 <- score_happiness |>
  filter(year == 2024) |>
  select(Country, Happiness) |>
  arrange(desc(Happiness)) |>
  mutate(rank = row_number()) |>
  filter(rank <= 5 | rank > (n() - 5)) 


top_bottom_5_data <- top_bottom_5 |>
  left_join(emotions_2023, by = "Country")


p <- ggplot(top_bottom_5_data, aes(x = reorder(Country, Happiness), y = Happiness, fill = SocialSup)) +
  geom_point(shape = 21, color = "black", size = 6, alpha = 0.8) +  
  coord_flip() +  
  scale_fill_viridis_c(option = "C", name = "Social Support") +  
  labs(
    x = "Country",
    y = "Happiness Score"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 14),
    legend.position = "right"
  )

print(p)
```


## Comparison of the Happiness Report between Regions

```{r}
ggplot(score_happiness |>
         left_join(data_happiness |> select(Country, Region), by = "Country", relationship = "many-to-many") |>
         filter(Region != 0),  
       aes(y = Region, x = Happiness, fill = Region)) + 
  geom_violin(trim = FALSE, alpha = 0.7) +  
  scale_fill_manual(
    values = c(
      "Asia" = "#E41A1C",  
      "NorthAmerica + ANZ +Western EU" = "#984EA3",  
      "Middle East and Africa" = "#FF7F00",  
      "Latin America and Caribbean" = "#4DAF4A",  
      "Central and Eastern Europe + CIS" = "#377EB8"
    )
  ) +
  labs(
    y = "Region",  
    x = "Happiness Score"  
  ) +
  scale_y_discrete(labels = c(
    "South Asia" = "S.Asia", 
    "Southeast Asia + East Asia" = "(Southeast + East)Asia",
    "Sub-Saharan Africa" = "Sub-Saharan Africa", 
    "Western Europe" = "Western EU", 
    "North America and ANZ" = "NorthAmerica + ANZ",
    "Latin America and Caribbean" = "Latin America and Caribbean", 
    "Central and Eastern Europe + CIS" = "(Central&Eastern)EU + CIS")) +  
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 14),
    legend.position = "none",  
    panel.grid.major = element_line(color = "gray90", size = 0.5),  
    panel.grid.minor = element_blank(),
    axis.text.y = element_text(size = 10), 
    axis.title.x = element_text(size = 14),  
    axis.title.y = element_text(size = 14)   
  )

```


## Happiness Score vs GDP per Capita 

```{r}

data_happiness_2023 <- data_happiness |>
  filter(year == 2023)


score_2024 <- score_happiness |>
  filter(year == 2024)


merged_data <- data_happiness_2023 |>
  left_join(score_2024, by = "Country")

p <- ggplot(merged_data, aes(x = OriginalGDP, y = Happiness, color = Region)) +
  geom_point(alpha = 0.8, size = 4) +  # Puntos más grandes y opacos
  geom_smooth(method = "lm", color = "black", size = 1, se = FALSE) + 
  scale_color_manual(
    values = c(
      "Asia" = "#E41A1C",  
      "(Southeast + East)Asia" = "#A65628",  
      "S. Asia" = "#4DAF4A",  
      "NorthAmerica + ANZ +Western EU" = "#984EA3",  
      "Middle East and Africa" = "#FF7F00",  
      "Latin America and Caribbean" = "#4DAF4A",  
      "Central and Eastern Europe + CIS" = "#377EB8"
    )
  ) +
  scale_x_continuous(
    trans = 'log10', 
    labels = scales::label_dollar(prefix = "USD ", scale = 1, accuracy = 1) 
  ) +
  labs(
    x = "GDP per Capita (Log10 Scale, 2023)", 
    y = "Happiness Score (2024)"
  ) +
  theme_minimal() + 
  theme(
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 14),
    legend.position = "bottom"
  )

print(p)


```
## Happiness Score vs GDP per Capita 
```{r}

# Filtramos los datos por año y hacemos el merge
data_happiness_2023 <- data_happiness |>
  filter(year == 2023)

score_2024 <- score_happiness |>
  filter(year == 2024)

merged_data <- data_happiness_2023 |>
  left_join(score_2024, by = "Country")

# Lista de países que quieres resaltar
highlight_countries <- c(
  "Guatemala", "Paraguay", "Panama", "Indonesia", "Thailand", 
  "Costa Rica", "Colombia", "Luxembourg", "Switzerland", 
 "Finland", "Netherlands", "Lithuania", "Israel","Ukraine","Georgia","Turkiye","Ireland",
 "Botswana","Egypt"
)


merged_data$Countries <- ifelse(merged_data$Country %in% highlight_countries, "Selected", "Others")



# Crear gráfico
p <- ggplot(merged_data, aes(x = OriginalGDP, y = Happiness, color = Countries)) +
  geom_point(alpha = 0.8, size = 4) +  # Puntos más grandes y opacos
  geom_smooth(method = "lm", color = "black", size = 1, se = FALSE) + 
  scale_color_manual(
    values = c(
      "Selected" = "#E41A1C",  # Color para los países destacados
      "others" = "gray"  # Color para los otros países
    )
  ) +
  scale_x_continuous(
    trans = 'log10', 
    labels = scales::label_dollar(prefix = "USD ", scale = 1, accuracy = 1) 
  ) +
  labs(
    x = "GDP per Capita (Log10 Scale, 2023)", 
    y = "Happiness Score (2024)"
  ) +
  theme_minimal() + 
  theme(
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 14),
    legend.position = "bottom"
  ) +
  # Etiquetas de los países destacados
  geom_text(aes(label = ifelse(Country %in% highlight_countries, as.character(Country), "")),
            hjust = 0.5, vjust = -0.5, size = 3.5, color = "black")

print(p)
```


## Positive Affect by Region

```{r}
ggplot(data =data_happiness|>
         filter(Region != 0), aes(y = Region, x = PosAffect, fill = Region)) + 
  geom_boxplot(alpha = 0.7) +  
  scale_fill_manual(
    values = c(
      "Asia" = "#E41A1C",  
      "NorthAmerica + ANZ +Western EU" = "#984EA3",  
      "Middle East and Africa" = "#FF7F00",  
      "Latin America and Caribbean" = "#4DAF4A",  
      "Central and Eastern Europe + CIS" = "#377EB8"
    )
  ) +
  labs(
    y = "Region",  
    x = "Positive Affect"  
  ) +
  scale_y_discrete(labels = c(
    "South Asia" = "S.Asia", 
    "Southeast Asia + East Asia" = "(Southeast + East)Asia",
    "Sub-Saharan Africa" = "Sub-Saharan Africa", 
    "Western Europe" = "Western EU", 
    "North America and ANZ" = "NorthAmerica + ANZ",
    "Latin America and Caribbean" = "Latin America and Caribbean", 
    "Central and Eastern Europe + CIS" = "(Central&Eastern)EU + CIS")) +  
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 14),
    legend.position = "none",  
    panel.grid.major = element_line(color = "gray90", size = 0.5),  
    panel.grid.minor = element_blank(),
    axis.text.y = element_text(size = 10), 
    axis.title.x = element_text(size = 14),  
    axis.title.y = element_text(size = 14)   
  )

```


## Comparison Happiness Score and Positive Affect

```{r}

# Mapa de colores por región
colores_region <- c(
  "Asia" = "#E41A1C",  
  "NorthAmerica + ANZ +Western EU" = "#984EA3",  
  "Middle East and Africa" = "#FF7F00",  
  "Latin America and Caribbean" = "#4DAF4A",  
  "Central and Eastern Europe + CIS" = "#377EB8"
)


paises_elegidos <-  c(
  "Guatemala", "Paraguay", "Panama", "Indonesia", "Thailand", 
  "Costa Rica", "Colombia", "Luxembourg", "Switzerland", 
 "Finland", "Netherlands", "Lithuania", "Israel","Ukraine","Georgia","Turkiye","Ireland",
 "Botswana","Egypt"
)


data_filtrada <- data_happiness_2023 |>
  filter(Country %in% paises_elegidos) 

score_filtrado <- score_2024 |>
  filter(Country %in% paises_elegidos) |> 
  left_join(data_filtrada |> select(Country,Region))


grafico_happiness <- ggplot(score_filtrado, aes(y = reorder(Country, Happiness), x = Happiness, fill = Region)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colores_region) +
  labs(
    title = "Happiness Score", 
    x = "Score", 
    y = NULL, 
    fill = "Region"
  ) +
  theme_minimal() +
  theme(
    legend.position = "bottom", 
    legend.title = element_blank(),
    axis.text.y = element_text(size = 10),
    plot.title = element_text(face = "bold", size = 14),
    plot.margin = margin(5, 15, 5, 5)  
  )

grafico_positive <- ggplot(data_filtrada, aes(y = reorder(Country, PosAffect), x = PosAffect, fill = Region)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colores_region) +
  labs(
    title = "Positive Affect", 
    x = "Score", 
    y = NULL, 
    fill = "Region"
  ) +
  theme_minimal() +
  theme(
    legend.position = "bottom", 
    legend.title = element_blank(),
    axis.text.y = element_text(size = 10),
    plot.title = element_text(face = "bold", size = 14),
    plot.margin = margin(5, 15, 5, 5)
  )


grafico_comb <- grafico_happiness + grafico_positive + plot_layout(ncol = 2, guides = "collect") &
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    legend.position = "bottom"  
  )


grafico_comb
```


## Conclusion  

<ul style="line-height: 0.8;">
  <li><span style="font-size: 22px;"><b>Happiness as Multifaceted</b>: Combines factors such as economy, health, social relationships, and daily emotions.</span></li>
  <li><span style="font-size: 22px;"><b>Key Insights from Data</b>:</span></li>
  <ul style="line-height: 0.6; margin-left: 20px;">
    <li><span style="font-size: 22px;"><b>Economic Wealth</b>: Important but insufficient for high happiness levels.</span></li>
    <li><span style="font-size: 22px;"><b>Standout Regions</b>:  
      - Latin America & Southeast Asia: Exceed expectations due to positive emotions and strong social support.</span></li>
    <li><span style="font-size: 22px;"><b>Positive Emotions</b>: Significant in certain cultures but not always reflected in overall happiness scores.</span></li>
  </ul>
  <li><span style="font-size: 22px;"><b>Personal Observations</b>:</span></li>
  <ul style="line-height: 0.6; margin-left: 20px;">
    <li><span style="font-size: 22px;">Wealthy countries (e.g., Luxembourg, Ireland): Ideal material conditions, yet fewer positive emotions.</span></li>
    <li><span style="font-size: 22px;">Latin America: Joy and daily optimism are central to well-being.</span></li>

</ul>









